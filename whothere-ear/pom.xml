<?xml version="1.0" encoding="UTF-8"?>
<project 
    xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>com.github.zelmothedragon</groupId>
        <artifactId>whothere</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    
    <groupId>com.github.zelmothedragon.whothere</groupId>
    <artifactId>whothere-ear</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>ear</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <context.path>/whothere</context.path>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>com.github.zelmothedragon.whothere</groupId>
            <artifactId>whothere-ejb</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <scope>compile</scope>
            <type>ejb</type>
        </dependency>
        <dependency>
            <groupId>com.github.zelmothedragon.whothere</groupId>
            <artifactId>whothere-war</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <scope>compile</scope>
            <type>war</type>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>fish.payara.maven.plugins</groupId>
                <artifactId>payara-micro-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>bundle</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <payaraVersion>${version.payara}</payaraVersion>
                    <uberJarClassifier>micro</uberJarClassifier>
                    <autoDeployEmptyContextRoot>false</autoDeployEmptyContextRoot>
                    <autoDeployContextRoot>${context.path}</autoDeployContextRoot>
                    <deployArtifacts>
                        <artifactItem>
                            <groupId>com.github.zelmothedragon.whothere</groupId>
                            <artifactId>whothere-ear</artifactId>
                            <version>${project.version}</version>
                            <type>ear</type>
                        </artifactItem>
                    </deployArtifacts>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${version.java}</source>
                    <target>${version.java}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ear-plugin</artifactId>
                <configuration>
                    <applicationName>${project.artifactId}</applicationName>
                    <version>8</version>
                    <filtering>true</filtering>
                    <defaultLibBundleDir>lib</defaultLibBundleDir>
                    <skinnyWars>true</skinnyWars>
                    <outputFileNameMapping>@{artifactId}@-@{version}@@{dashClassifier?}@.@{extension}@</outputFileNameMapping>
                    <modules>
                        <ejbModule>
                            <groupId>com.github.zelmothedragon.whothere</groupId>
                            <artifactId>whothere-ejb</artifactId>
                        </ejbModule>
                        <webModule>
                            <groupId>com.github.zelmothedragon.whothere</groupId>
                            <artifactId>whothere-war</artifactId>
                            <contextRoot>${context.path}</contextRoot>
                        </webModule>
                    </modules>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
